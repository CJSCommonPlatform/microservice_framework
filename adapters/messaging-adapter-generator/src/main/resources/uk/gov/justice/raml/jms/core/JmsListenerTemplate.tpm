package <PACKAGE_NAME>;

import uk.gov.justice.services.core.annotation.Adapter;
import uk.gov.justice.services.core.dispatcher.AsynchronousDispatcher;
import uk.gov.justice.services.adapter.messaging.JmsProcessor;
import uk.gov.justice.services.adapter.messaging.JsonSchemaValidationInterceptor;

import javax.ejb.ActivationConfigProperty;
import javax.ejb.MessageDriven;

import javax.inject.Inject;
import javax.interceptor.Interceptors;
import javax.jms.Message;
import javax.jms.MessageListener;
import org.slf4j.Logger;
import uk.gov.justice.services.messaging.logging.LoggerUtils;
import uk.gov.justice.services.messaging.logging.JmsMessageLoggerHelper;

import static uk.gov.justice.services.core.annotation.Component.*;

@MessageDriven(activationConfig = {
        <ACTIVATION_CONFIG_PROPERTY:{ACP|
        @ActivationConfigProperty(propertyName = "<ACP.NAME>", propertyValue = "<ACP.VALUE>")}; separator=", ">
})
@Interceptors(JsonSchemaValidationInterceptor.class)
@Adapter(<ADAPTER_TYPE>)
public class <CLASS_NAME>JmsListener implements MessageListener {

   private static final Logger LOGGER = org.slf4j.LoggerFactory.getLogger(<CLASS_NAME>JmsListener.class);

   @Inject
   AsynchronousDispatcher dispatcher;

   @Inject
   JmsProcessor jmsProcessor;

   @Override
   public void onMessage(Message message) {
       LoggerUtils.trace(LOGGER, () -> String.format("Received JMS message: %s", JmsMessageLoggerHelper.toJmsTraceString(message)));
       jmsProcessor.process(dispatcher::dispatch, message);
   }
}
